#!/usr/bin/env zsh
set +o pipefail

# start xorg
if [[ -t 0 && $(tty) == "/dev/tty1" && ! $DISPLAY ]]; then
 exec startx
fi

### gpg-agent fixes
export GPG_TTY=$(tty)

# tmux autostart (supplied by plugins/tmux from oh-my-zsh)
export ZSH_TMUX_AUTOSTART=true

# fzf environment variables (fzf support supplied by plugins/fzf from oh-my-sh)
export FZF_BASE=/opt/homebrew/opt/fzf
export FZF_DEFAULT_COMMAND=fd

### Plugins (managed by zplug)
export ZPLUG_HOME=/opt/homebrew/opt/zplug
source $ZPLUG_HOME/init.zsh

zplug "themes/robbyrussell", as:theme, from:oh-my-zsh
zplug "plugins/tmux", as:plugin, from:oh-my-zsh
zplug "plugins/fzf", as:plugin, from:oh-my-zsh

if ! zplug check --verbose; then
    printf "Install? [y/N]: "
    if read -q; then
        echo; zplug install
    fi
fi

zplug load --verbose

# Find where asdf should be installed
ASDF_DIR="${ASDF_DIR:-$HOME/.asdf}"
ASDF_COMPLETIONS="$ASDF_DIR/completions"

# If not found, check for Homebrew package
if [[ ! -f "$ASDF_DIR/asdf.sh" ]] && command -v brew >/dev/null; then
   ASDF_DIR="/usr/local/opt/asdf"
   ASDF_COMPLETIONS="$ASDF_DIR/etc/bash_completion.d"
fi

# Load command
if [[ -f "$ASDF_DIR/asdf.sh" ]]; then
    . "$ASDF_DIR/asdf.sh"

    # Load completions
    if [[ -f "$ASDF_COMPLETIONS/asdf.bash" ]]; then
        . "$ASDF_COMPLETIONS/asdf.bash"
    fi
fi

# general aliases
alias batlvl='echo -e $(cat /sys/class/power_supply/BAT0/capacity)%'
alias cat='bat --tabs 2'
alias vim='nvim'

export EDITOR=nvim

alias gp='git push'
alias gs='git switch'

# git switch and pull
# with no args it switches to main/master, pulls, and fetches
# with one arg it switches to the given branch and pulls
gsp() {
  if [[ "$#" -ne 1 ]]; then
    local branch='main'

    git rev-parse --verify $branch > /dev/null 2>&1
    if [[ "$?" -ne 0 ]]; then
      local branch='master'
    fi

    gs $branch && git pull origin $branch
    git fetch
  else
    gs $1 && git pull origin $1
  fi
}

# git hard restore
# restores every file and then removes all untracked files
ghr() {
  git restore --staged .
  git restore .
  git ls-files --others --exclude-standard | xargs -n1 rm
}

# kubectl
source <(kubectl completion zsh)

# my aliases for kubectl
alias k=kubectl

# kubectl get
alias kg='k get'
alias kgp='kg pod'
alias kgs='kg service'
alias kgd='kg deployment'
alias kgse='kg secret'
alias kgss='kg statefulset'
alias kgn='kg node'

# kubectl describe
alias kd='k describe'
alias kdp='kd pod'
alias kds='kd service'
alias kdd='kd deployment'
alias kdse='kd secret'
alias kdss='kd statefulset'
alias kdn='kd node'

# kubectl delete 
alias kde='k delete'
alias kdep='kde pod'
alias kdes='kde svc'
alias kded='kde deployment'
alias kdese='kde secret'
alias kdess='kde statefulset'

# misc
alias ke='k exec -it'
alias kl='k logs -f'
alias sudo='sudo -E'
